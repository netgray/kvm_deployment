---
- name: Deploys VMs based on Whonix
  hosts: all
  become: yes
  vars:
    whonix_file_name: "Whonix-Xfce-17.0.3.0.Intel_AMD64.qcow2.libvirt.xz"
    whonix_file_url: "https://download.whonix.org/libvirt/17.0.3.0/{{ whonix_file_name }}"
    whonix_file_checksum: "sha512:7f951878feaffc670ee08f1e19b7e0dad88846cf8d388e5a7db969913e311c8237fc4663a9c5d2e43c27a2311f9aefb9b29275b5bc509c084997d84e8831d9ed"
    pool_dir: "/var/lib/libvirt/images"
    user_name: vmadmin
    tmp_dir: "/data/tmp"

  tasks:
  - name: Ensure KVM componets are installed.
    ansible.builtin.apt:
      pkg:
      - qemu-kvm 
      - libvirt-clients 
      - libvirt-daemon-system 
      - bridge-utils 
      - libguestfs-tools 
      - genisoimage 
      - virtinst 
      - libosinfo-bin 
      - virt-manager 
      - dnsmasq 
      - iptables
      - python3-libvirt
      - python3-lxml
      - guestfs-tools

  - name: Add user to KVM Groups
    ansible.builtin.user:
      name: "{{ user_name }}"
      groups: libvirt,libvirt-qemu
      append: yes

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: "{{ tmp_dir }}"
      state: directory
      mode: '0777'

  - name: Download Whonix
    get_url:
      url: "{{ whonix_file_url }}"
      dest: "{{ tmp_dir }}/{{ whonix_file_name }}"
      checksum: "{{ whonix_file_checksum }}"
      mode: 0440

  - name: Uncompress Whonix
    shell: "tar -xvf {{ tmp_dir }}/{{ whonix_file_name }}"
    args:
      chdir: "{{ tmp_dir }}"

  - name: Touch a file - accept License Agreement
    ansible.builtin.file:
      path: "{{ tmp_dir }}/WHONIX_BINARY_LICENSE_AGREEMENT_accepted"
      state: touch
      mode: u=rw,g=r,o=r

  - name: Define external network
    community.libvirt.virt_net:
      command: define
      name: Whonix-External
      xml: '{{ tmp_dir }}/Whonix_external_network-17.0.3.0.xml'

  - name: Define internal network
    community.libvirt.virt_net:
      command: define
      name: Whonix-Internal
      xml: '{{ tmp_dir }}/Whonix_internal_network-17.0.3.0.xml'

  - name: Enable autostart for external network
    community.libvirt.virt_net:
      autostart: yes
      name: Whonix-External

  - name: Enable autostart for internal network
    community.libvirt.virt_net:
      autostart: yes
      name: Whonix-Internal

  - name: Start external network
    community.libvirt.virt_net:
      command: create
      name: Whonix-External

  - name: Start internal network
    community.libvirt.virt_net:
      command: create
      name: Whonix-Internal

  - name: Import Gateway Image
    shell: "virsh -c qemu:///system define Whonix-Gateway*.xml"
    args:
      chdir: "{{ tmp_dir }}"

  - name: Import Workstation Image
    shell: "virsh -c qemu:///system define Whonix-Workstation*.xml"
    args:
      chdir: "{{ tmp_dir }}"

  - name: Move Whonix-Gateway Image to virt images store
    shell: "mv Whonix-Gateway*.qcow2 {{ pool_dir }}/Whonix-Gateway.qcow2"
    args:
      chdir: "{{ tmp_dir }}"

  - name: Move Whonix-Workstation Image to virt images store
    shell: "mv Whonix-Workstation*.qcow2 {{ pool_dir }}/Whonix-Workstation.qcow2"
    args:
      chdir: "{{ tmp_dir }}"

  - name: start Whonix-Gateway
    shell: "virsh start Whonix-Gateway"

  - name: start Whonix-Workstation
    shell: "virsh start Whonix-Workstation"
